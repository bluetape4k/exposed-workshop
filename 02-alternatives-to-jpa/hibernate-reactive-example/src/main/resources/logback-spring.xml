<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <!-- @formatter:off -->
    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>

    <!-- You can override this to have a custom pattern -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!-- Appender to log to console -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in the console logs-->
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>
    <!-- formatter:on -->

    <logger name="alternative.hibernate.reactive.example" level="DEBUG"/>
    <logger name="io.bluetape4k" level="DEBUG"/>

    <!-- properties에 show_sql 을 사용하지 말고, org.hibernate.SQL을 사용하세요 -->
    <logger name="org.hibernate.SQL" level="DEBUG"/>
    <!-- Hibernate SQL 구문의 Parameter 정보를 로그로 출력합니다 -->
    <!--<logger name="org.hibernate.type.descriptor.sql" level="TRACE"/>-->

    <!-- Slow queries -->
    <logger name="org.hibernate.SQL_SLOW" level="DEBUG"/>
    <!-- Query 빌드 전략 -->
    <!--<logger name="org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter" level="DEBUG"/>-->

    <!-- 2nd Level Cache -->
    <logger name="org.hibernate.cache" level="DEBUG"/>

    <root level="INFO">
        <appender-ref ref="console"/>
    </root>
</configuration>
